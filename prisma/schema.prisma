// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model MyModel {
  id             Int              @id @unique @default(autoincrement())
  status         Int
  name_zh        String
  name_en        String?
  article_number String?
  brand          String?
  scale          String?
  type           String?
  size           ModelSize?
  main_img       String?
  panting_guide  String[]         @default([])
  imgs           String[]         @default([])
  PD             DateTime?
  purchase_infos PurchaseInfo[]
  finish_infos    ModelFinishInfo[]
  userId String?  @db.Uuid
}

model ModelSize {
  id      Int     @id @unique @default(autoincrement())
  unit    String
  width   Float
  length  Float
  height  Float?
  modelId Int     @unique
  model   MyModel @relation(fields: [modelId], references: [id], onDelete: Cascade)
}

model PurchaseInfo {
  id              Int       @id @unique @default(autoincrement())
  e_commerce_name String
  currency        String
  price           Float
  amount          Int       @default(1)
  shop_name       String?
  purchase_date   DateTime?
  modelId         Int
  model           MyModel   @relation(fields: [modelId], references: [id], onDelete: Cascade)
}

model ModelFinishInfo {
  id            Int       @id @unique @default(autoincrement())
  title         String?
  finished_date DateTime?
  description   String?
  process_imgs  String[]  @default([])
  gallery       String[]  @default([])
  modelId       Int 
  model         MyModel   @relation(fields: [modelId], references: [id], onDelete: Cascade)
}
// 定義 Profiles 表
model Profile {
  id        String @id @default(uuid()) @map("id") @db.Uuid
  name String
  userId String @unique@default(uuid()) @db.Uuid
}

